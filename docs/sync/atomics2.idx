Ordering	sync/atomics2.html#Ordering	atomics2: Ordering	
Atomic	sync/atomics2.html#Atomic	atomics2: Atomic	
`=copy`	sync/atomics2.html#=copy,Atomic[T],Atomic[T]	atomics2: `=copy`[T](dst: var Atomic[T]; src: Atomic[T])	
`=sink`	sync/atomics2.html#=sink,Atomic[T],Atomic[T]	atomics2: `=sink`[T](dst: var Atomic[T]; src: Atomic[T])	
load	sync/atomics2.html#load,Atomic[T],Ordering	atomics2: load[T](location: var Atomic[T]; order: Ordering = SeqCst): T	
store	sync/atomics2.html#store,Atomic[T],T,Ordering	atomics2: store[T](location: var Atomic[T]; desired: T; order: Ordering = SeqCst)	
exchange	sync/atomics2.html#exchange,Atomic[T],T,Ordering	atomics2: exchange[T](location: var Atomic[T]; desired: T; order: Ordering = SeqCst): T	
compareExchange	sync/atomics2.html#compareExchange,Atomic[T],T,T,Ordering	atomics2: compareExchange[T](location: var Atomic[T]; expected: var T; desired: T;\n                   order: Ordering = SeqCst): bool	
compareExchange	sync/atomics2.html#compareExchange,Atomic[T],T,T,Ordering,Ordering	atomics2: compareExchange[T](location: var Atomic[T]; expected: var T; desired: T;\n                   success, failure: Ordering): bool	
compareExchangeWeak	sync/atomics2.html#compareExchangeWeak,Atomic[T],T,T,Ordering	atomics2: compareExchangeWeak[T](location: var Atomic[T]; expected: var T; desired: T;\n                       order: Ordering = SeqCst): bool	
compareExchangeWeak	sync/atomics2.html#compareExchangeWeak,Atomic[T],T,T,Ordering,Ordering	atomics2: compareExchangeWeak[T](location: var Atomic[T]; expected: var T; desired: T;\n                       success, failure: Ordering): bool	
fetchAdd	sync/atomics2.html#fetchAdd,Atomic[T: SomeInteger],T,Ordering	atomics2: fetchAdd[T: SomeInteger](location: var Atomic[T]; value: T;\n                         order: Ordering = SeqCst): T	
fetchSub	sync/atomics2.html#fetchSub,Atomic[T: SomeInteger],T,Ordering	atomics2: fetchSub[T: SomeInteger](location: var Atomic[T]; value: T;\n                         order: Ordering = SeqCst): T	
fetchAnd	sync/atomics2.html#fetchAnd,Atomic[T: SomeInteger],T,Ordering	atomics2: fetchAnd[T: SomeInteger](location: var Atomic[T]; value: T;\n                         order: Ordering = SeqCst): T	
fetchOr	sync/atomics2.html#fetchOr,Atomic[T: SomeInteger],T,Ordering	atomics2: fetchOr[T: SomeInteger](location: var Atomic[T]; value: T;\n                        order: Ordering = SeqCst): T	
fetchXor	sync/atomics2.html#fetchXor,Atomic[T: SomeInteger],T,Ordering	atomics2: fetchXor[T: SomeInteger](location: var Atomic[T]; value: T;\n                         order: Ordering = SeqCst): T	
atomicInc	sync/atomics2.html#atomicInc,Atomic[T: SomeInteger],T	atomics2: atomicInc[T: SomeInteger](location: var Atomic[T]; value: T = 1)	
atomicDec	sync/atomics2.html#atomicDec,Atomic[T: SomeInteger],T	atomics2: atomicDec[T: SomeInteger](location: var Atomic[T]; value: T = 1)	
`+=`	sync/atomics2.html#+=,Atomic[T: SomeInteger],T	atomics2: `+=`[T: SomeInteger](location: var Atomic[T]; value: T)	
`-=`	sync/atomics2.html#-=,Atomic[T: SomeInteger],T	atomics2: `-=`[T: SomeInteger](location: var Atomic[T]; value: T)	
